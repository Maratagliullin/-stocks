version: "3.7"
 
services:
  web: &WEB
    image: $CI_REGISTRY/$CI_PROJECT_PATH/web:${CI_COMMIT_SHA}
    container_name: web
    env_file:
      - .env
    volumes:
      - /var/www/static:/static
    ports:
      - "127.0.0.1:8000:8000"
    #healthcheck:
    #  test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8000/admin/"]
    #  interval: 30s
    #  timeout: 10s
    #restart: on-failure
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: bash /gunicorn_run.sh
    logging:
      driver: "json-file"
      options:
        labels: "name"
    labels:
      name: "web"

  db:
    image: $CI_REGISTRY/$CI_PROJECT_PATH/db:${CI_COMMIT_SHA}
    container_name: db
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        labels: "name"
    labels:
      name: "db"

  redis:
    image: $CI_REGISTRY/$CI_PROJECT_PATH/redis:latest
    container_name: redis
    ports:
      - "6379"
    healthcheck:
        test: "[ \"$$(redis-cli -h localhost -p 6379 ping)\" = \"PONG\" ]"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        labels: "name"
    labels:
      name: "redis"

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    logging:
      driver: "json-file"
      options:
        labels: "name"
    labels:
      name: "loki"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/log/containers
      - ./promtail-docker-config.yml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    logging:
      driver: "json-file"
      options:
        labels: "name"
    labels:
      name: "promtail"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=1q2w3e4r
      - GF_SERVER_DOMAIN=dev-office.atrucks.su
      - GF_SERVER_ROOT_URL=https://dev-office.atrucks.su/loki/
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
    logging:
      driver: "json-file"
      options:
        labels: "name"
    labels:
      name: "grafana"

volumes:
   pgdata:
   static:

networks:
  default:
    name: office